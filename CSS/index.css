/*                Layouts               */

/* general boilerplate that grid-template-areas uses to define the classes affected by placement. */
.header {grid-area: header;}
.navigation {grid-area: nav;}
.main {grid-area: main;}
.sidebar {grid-area: sidebar;}
.chat {grid-area: chat;}
.other {grid-area: other;}
.footer {grid-area: footer;}

/* Mobile layout */
.container{
  display: grid;
  /*
  Determine sizing attributes of the horizontal rows. The mobile layout (this one) is easy to follow, since each element occupies the entire width of the screen.
  auto is used to expand/shrink the parent item to the size of the child's content.
  1fr uses up all of the space left after the auto's have used their required space.
  */
  grid-template-rows: auto auto auto 1fr auto auto auto auto;
  grid-template-columns: 1fr;
  grid-template-areas:
  "logo"
  "header"
  "nav"
  "main"
  "chat"
  "other"
  "sidebar"
  "footer"
  ;
}

/* Tablet layout */

@media (min-width: 950px) {

  .container{
    display: grid;
    min-height: 100vh;
    /*
    more than 2 fr's will result in the space remaining (after autos) to be split at the fractional value
    with a denomination being the sum of fr coefficents(1/2 in this case)
    */
    grid-template-rows: auto auto 1fr 1fr auto auto;
    /* Same idea as the rows, but implemented on the vertical columns.*/
    grid-template-columns: auto 1fr 1fr 1fr;
    grid-template-areas:
    "logo header header header"
    "sidebar nav nav nav"
    "sidebar main main main"
    "chat main main main"
    "other other other other"
    "footer footer footer footer"
    ;
  }
}


/* Desktop layout */

@media (min-width: 1150px) {

  .container{
    display: grid;
    grid-template-rows: auto auto 1fr auto auto;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
    grid-template-areas:
    "logo header header header header"
    "sidebar nav nav nav chat"
    "sidebar main main main chat"
    "other other other other other"
    "footer footer footer footer footer"
    ;
  }
}


/*                .main and hardcoded heights (to fit the welcome.html embed without a scrollbar)               */

/* mobile height */
.main{
  height: 67rem;
}

/* mobile + (anything above the max width of .main-element in document.css) */
/* the text area width increases, decreasing the needed height. */
@media (min-width: calc(600px + 1rem)) {
  .main {
    min-height: 62rem;
    height: 100%;
  }

}

/* super-wide monitors.  */
/* the font size and max width of .main element are increased in document.css */
/* the font makes the text area increase in height needed to display the embed without a scrollbar. */
@media (min-width: 1800px) {
  .main{
    height: 100%;
  }
}

/* make the embed fill .main */
.main-embed{
  height: 100%;
  width: 100%;
}



/*                Chat & Sidebar              */

.chat-element{
  height: 100%;
  width: 100%;
}

.sidebar-element{
 height: 100%;
 width: 100%;

}

.wrap{
  height: 100%;
  width: 100%;
  min-height: 25rem;
  background-color: hsla(36, 5%, 21%, 1);
}





/*                temporary for dev purposes               */

.container{
  /*gap: .1rem 0rem;*/
  background-color: hsla(36, 5%, 21%, 0.25);
}

.item {
  background-color: #f5f5f5;

  /*width:*/


}

.other {
  display: none;
}