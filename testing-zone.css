/*                Layouts               */

/* general boilerplate that grid-template-areas uses to define the classes affected by placement. */
.top {grid-area: top;}
.main {grid-area: main;}
.sidebar1 {grid-area: sidebar1;}
.sidebar2 {grid-area: sidebar2;}
.other {grid-area: other;}
.bottom {grid-area: bottom;}

/* Mobile layout */
.grid-wrapper{
  min-height: 100vh;
  display: grid;
  /*
  Determine sizing attributes of the horizontal rows. The mobile layout (this one) is easy to follow, since each element occupies the entire width of the screen.
  auto is used to expand/shrink the item to fit it's content.
  1fr uses up all of the space left after the auto's have used their required space to fix their content.
  */
  grid-template-rows: auto auto 1fr auto auto;
  grid-template-columns: 1fr;
  grid-template-areas:
  "top"
  "sidebar1"
  "main"
  "sidebar2"
  "bottom"
  ;
}

/* Tablet layout */
@media (min-width: 950px) {

  .grid-wrapper{
    display: grid;
    /*
    more than 2 fr's will result in the space remaining (after autos) to be split at the fractional value.
    */
    grid-template-rows: auto 1fr 1fr auto;
    /* Same idea as the rows, but implemented on the vertical columns.*/
    grid-template-columns: 1fr 3fr;
    grid-template-areas:
    "top top"
    "sidebar1 main"
    "sidebar2 main"
    "bottom bottom"
    ;
  }
}

/* Desktop layout */
@media (min-width: 1150px) {
  .grid-wrapper{
    display: grid;
    grid-template-rows: auto 1fr auto;
    grid-template-columns: 1fr 3fr 1fr;
    grid-template-areas:
    "top top top"
    "sidebar1 main sidebar2"
    "bottom bottom bottom"
    ;
  }
}



/* Temp, colors and border are purely for demonstration purposes.*/

.item {
  background-color: #d3d3d3;
  border: 1px solid blue;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 30px;


}
/* Temp, gets rid of some annoying default css that browsers use. For demonstration purposes.*/
html * {
  margin:           unset;
  box-sizing:       unset;
  padding:          unset;
  color:            unset;
  text-decoration:  unset;
}